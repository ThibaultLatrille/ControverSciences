<script type="text/javascript">
    //setup before functions
    function countCharacters(text) {
        var out = text.replace(/\[\*\]\([0-9]*\)/g, '')
                .replace(/\]\(\/timelines\/[0-9]*\)/g, '')
                .replace(/\]\((?:(?:https?|\(ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9]+-?)*[a-z0-9]+)(?:\.(?:[a-z0-9]+-?)*[a-z0-9]+)*(?:\.(?:[a-z]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?\)/g, '')
                .replace(/\*|\^|_|\(|\)|\[|\]|-/g, '')
                .replace(/[0-9]\. /g, '');
        return out.length
    }
    function sumArray(someArray) {
        var total = 0;
        for (var i = 0; i < someArray.length; i++) {
            total += someArray[i] << 0;
        }
        return total
    }
    isAnyTaskInProgress = false;
    window.onbeforeunload = confirmExit;
    function confirmExit() {
        if (isAnyTaskInProgress) {
            return "Some task is in progress. Are you sure, you want to close?";
        }
    }
    function setupLengthCounter(array) {
        var lenArray = new Array(array.length).fill(0);
        $.each(array, function (index, limit) {
            var typingTimer;                //timer identifier
            var doneTypingInterval = 100;  //time in ms, 5 second for example
            var max = limit[1];
            var min = limit[2] ? limit[2] : -1;
            var value = limit[0];
            var $input = $('#description' + value);
            var $charleft =  $('#characterLeft' + value);
            lenArray[index] = countCharacters($input.val());
            function doneTyping() {
                var len = countCharacters($input.val());
                lenArray[index] = len;
                // isAnyTaskInProgress = sumArray(lenArray) > 0;
                set_char(len);
            }
            function set_char(len) {
                if (len >= max) {
                    $charleft.css({"color": "#a94442"});
                    $charleft.text((len - max) + ' <%= t('views.edition.character_much') %>');
                } else if (len <= min) {
                    $charleft.css({"color": "#a94442"});
                    $charleft.text('<%= t('views.default.at_least') %> ' + (min - len) + ' <%= t('views.edition.character_miss') %>');
                } else {
                    $charleft.css({"color": "#5cb85c"});
                    $charleft.text((max - len) + ' <%= t('views.edition.character_left') %>');
                }
            }
            $(document).ready(function () {
                set_char(lenArray[index])
            });
            $input.on('keyup', function () {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(doneTyping, doneTypingInterval);
            });
            $input.on('keydown', function () {
                clearTimeout(typingTimer);
            });
        });
    }
</script>