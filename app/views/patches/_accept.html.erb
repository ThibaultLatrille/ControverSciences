<script type="text/javascript">
    (function () {
        $.fn.extend({
            prettyTextDiff: function (options) {
                var dmp, settings;
                settings = {
                    originalContainer: ".original",
                    changedContainer: ".changed",
                    diffContainer: ".diff",
                    cleanup: true
                };
                settings = $.extend(settings, options);
                dmp = new diff_match_patch();
                return this.each(function () {
                    var changed, diffs, original, patches;
                    original = $(settings.originalContainer, this).text();
                    patches = dmp.patch_fromText($(settings.changedContainer, this).text());
                    changed = dmp.patch_apply(patches, original)[0];
                    diffs = dmp.diff_main(original, changed);
                    dmp.diff_cleanupSemantic(diffs);
                    $.fn.prettyTextDiff.fillContainer(diffs, settings, this, dmp);
                    return this;
                });
            }
        });

        $.fn.prettyTextDiff.fillContainer = function (diffs, settings, self, dmp) {
            var diff_as_html = $.map(diffs, function (diff, i) {
                return $.fn.prettyTextDiff.createHTML(diff, i, diffs);
            });
            $(settings.diffContainer, self).html(diff_as_html.join(''));
            $(settings.diffContainer + " .patch-validate", self).off();
            $(settings.diffContainer + " #accept-patches", self).off();
            $(settings.diffContainer + " .patch-refuse", self).off();
            // Re-add event handler for all matching elements
            $(settings.diffContainer + " .patch-validate", self).on("click", function () {
                var diff, index;
                index = parseInt($(this).data('id'));
                diff = diffs[index];
                $("#accept-patches", self).show();
                switch (diff[0]) {
                    case DIFF_INSERT:
                        diff[0] = 0;
                        if (index != 0 && diffs[index - 1][0] == DIFF_DELETE) {
                            diffs.splice(index - 1, 1);
                        }
                        $.fn.prettyTextDiff.fillContainer(diffs, settings, self, dmp);
                        return true;
                    case DIFF_DELETE:
                        diffs.splice(index, 1);
                        $.fn.prettyTextDiff.fillContainer(diffs, settings, self, dmp);
                        return true;
                }
            });
            $(settings.diffContainer + " .patch-refuse", self).on("click", function () {
                var diff, index;
                index = parseInt($(this).data('id'));
                diff = diffs[index];
                $("#accept-patches", self).show();
                switch (diff[0]) {
                    case DIFF_INSERT:
                        if (index != 0 && diffs[index - 1][0] == DIFF_DELETE) {
                            diffs[index - 1][0] = 0;
                        }
                        diffs.splice(index, 1);
                        $.fn.prettyTextDiff.fillContainer(diffs, settings, self, dmp);
                        return true;
                    case DIFF_DELETE:
                        diff[0] = 0;
                        $.fn.prettyTextDiff.fillContainer(diffs, settings, self, dmp);
                        return true;
                }
            });
            $("#accept-patches", self).on("click", function () {
                var $this = $(this);
                $this.hide();
                $this.after('<svg version="1.1" class="loader-like" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="40px" height="40px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"> <path fill="#000" d="M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z"> <animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"/></path></svg>');
                var new_content, patches, patchesText;
                patches = dmp.patch_make(diffs)
                patchesText = dmp.patch_toText(patches);
                new_content = $.map(diffs, function (diff, i) {
                    switch (diff[0]) {
                        case DIFF_INSERT:
                            return '';
                        case DIFF_DELETE:
                            return diff[1];
                        case DIFF_EQUAL:
                            return diff[1];
                    }
                }).join('');
                $.ajax($this.data('validate'), {
                    url: $this.data('validate'),
                    data: {
                        frame_id: $this.data('frame-id'),
                        comment_id: $this.data('comment-id'),
                        summary_id: $this.data('summary-id'),
                        field: $this.data('field'),
                        counter: patches.length,
                        content: patchesText,
                        parent_content: new_content
                    },
                    method: 'POST',
                    statusCode: {
                        201: function (response) {
                            $('.loader-like').remove();
                        },
                        401: function (response) {
                            $('.loader-like').remove();
                        },
                        409: function (response) {
                            $('.loader-like').remove();
                        }
                    }
                });
            });
            return true
        };

        $.fn.prettyTextDiff.createHTML = function (diff, i, diffs) {
            var data, html, operation, pattern_amp, pattern_gt, pattern_lt, pattern_para, text, diffId, onClick;
            html = [];
            diffId = ' data-id="' + i + '"';
            patchClick = '<span class="validations-checkox"><span class="inside">' +
                    '<span class="patch-refuse"' + diffId + '> <span class="glyphicon glyphicon-remove"></span> </span>' +
                    '<span class="patch-validate"' + diffId + '> <span class="glyphicon glyphicon-ok"></span> </span>' +
                    '</span></span>';
            pattern_amp = /&/g;
            pattern_lt = /</g;
            pattern_gt = />/g;
            pattern_para = /\n/g;
            operation = diff[0], data = diff[1];
            if (data != "") {
                text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;').replace(pattern_gt, '&gt;').replace(pattern_para, '<br>');
                switch (operation) {
                    case DIFF_INSERT:
                        return '<ins>' + text + '</ins>' + patchClick;
                    case DIFF_DELETE:
                        if ((i != (diffs.length - 1)) && (diffs[i + 1][0] == DIFF_INSERT)) {
                            return '<del>' + text + '</del>';
                        } else {
                            return '<del>' + text + '</del>' + patchClick;
                        }
                    case DIFF_EQUAL:
                        return '<span' + diffId + '>' + text + '</span>';
                }
            }
        };

    }).call(this);
    $(".pretty").prettyTextDiff({
        cleanup: true,
        originalContainer: "#original",
        changedContainer: "#patches",
        diffContainer: "#diff"
    });
</script>