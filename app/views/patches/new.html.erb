<% provide(:title, "Nouvelle correction") %>
<%= javascript_include_tag 'diff_match_patch' %>

<div id="my-container" class="container-fluid">
  <div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-lg-offset-2 col-lg-8">
      <div class="panel panel-default">
        <div class="panel-heading">
          <h2> <%= t('views.patches.if_not_yours_html') %>
          </h2>
          <br/>
        </div>

        <div class="panel-body">
          <b>
            <%= render 'patches/parent_header', patch: @patch %>
          </b>
          <br/>
          <br/>

          <b style="font-size: 1.4em">Message pour l'auteur</b> (facultatif)
          <br>

          <div id="characterLeft1"></div>

          <textarea id="description1" class="form-control textarea" value="<%= @patch.message %>"><%= @patch.message %></textarea>

          <br>
          <div id="patch-form">
            <b style="font-size: 1.4em">Suggestions</b>
            <br>

            <div id="characterLeft"></div>

              <textarea id="description" class="form-control textarea" value="<%= @patch.parent_content %>"></textarea>

            <br>

            <div class="pull-right">
              <div id="edit-ok" class="btn btn-success">
                <span class="glyphicon glyphicon-ok"></span>
                &nbsp;
                Valider les suggestions
              </div>
            </div>
          </div>

          <div id="patch-validate" style="display: none">
            <b style="font-size: 1.4em">Suggestions</b>
            <br>

            <div class="pretty">
              <div id="original" style="display: none"><%= @patch.parent_content %></div>
              <div id="patches" style="display: none"><%= @patch.content %></div>

              <div id="diff" style="text-align: justify"></div>
              <br>

              <div id="prepend-errors"></div>

              <div id="timeout-errors" style="display: none">
                <div class="alert alert-danger">
                  <%= t('views.default.timeout') %>
                </div>
              </div>

              <div class="pull-right">
                <div id="back-edit" class="btn btn-default">
                  <span class="glyphicon glyphicon-edit"></span>
                  &nbsp;
                  <%= "Revenir à l'édition" %>
                </div>
                <div id="send-patches" class="btn btn-success"
                     data-frame-id="<%= @patch.frame_id %>"
                     data-field="<%= @patch.field %>"
                     data-comment-id="<%= @patch.comment_id %>"
                     data-summary-id="<%= @patch.summary_id %>"
                     data-validate="<%= patches_path %>">
                  <span class="glyphicon glyphicon-send"></span>
                  &nbsp;
                  <%= t('views.patches.send') %>
                </div>
              </div>
            </div>
            <br/>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>

<% if @patch.summary_id || (@patch.comment_id && @patch.field != 6) %>
    <%= render 'modals/timelines_list', timelines_list: @tim_list, timeline_id: @patch.parent.timeline_id %>

    <%= render 'modals/reference_list', references_list: @list %>

    <%= render 'modals/href' %>
    <script type="text/javascript">
        $("#description").markdown({
            autofocus: true,
            savable: false
        });
    </script>
<% elsif @patch.frame_id && @patch.field == 1 %>
    <%= render 'modals/timelines_list', timelines_list: @tim_list, timeline_id: @patch.parent.timeline_id %>
    <script type="text/javascript">
        $("#description").markdown({
            autofocus: true,
            savable: false,
            hiddenButtons: ['cmdLinkInt', 'cmdUrl']
        });
    </script>
<% else %>
    <script type="text/javascript">
        $("#description").markdown({
            autofocus: true,
            savable: false,
            hiddenButtons: ['cmdLinkInt', 'cmdUrl', 'cmdLinkCVS', 'cmdList', 'cmdListO', 'cmdBold']
        });
    </script>
<% end %>
<%= render 'shared/length_counter' %>

<script type="text/javascript">
    $("#description1").markdown({
        autofocus: true,
        savable: false,
        hiddenButtons: ['cmdLinkInt', 'cmdUrl', 'cmdLinkCVS']
    });
    (function () {

        $.fn.extend({
            prettyTextDiff: function () {
                dmp = new diff_match_patch();
                var changed, diffs, original;
                original = $("#original").text();
                changed = this.val();
                diffs = dmp.diff_main(original, changed);
                dmp.diff_cleanupSemantic(diffs);
                $.fn.prettyTextDiff.fillContainer(diffs, dmp, original);
                return this
            }
        });

        $.fn.prettyTextDiff.fillContainer = function (diffs, dmp, original) {
            var diff_as_html = $.map(diffs, function (diff) {
                return $.fn.prettyTextDiff.createHTML(diff);
            });
            $("#diff").html(diff_as_html.join(''));
            $("#send-patches").off();
            $("#send-patches").on("click", function () {
                var $this = $(this);
                $this.hide();
                $this.after('<svg version="1.1" class="loader-like" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="40px" height="40px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"> <path fill="#000" d="M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z"> <animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"/></path></svg>');
                var patches, patchesText;
                patches = dmp.patch_make(diffs).filter(function( obj ) {
                  return obj.diffs[1][1] != '';
                });
                patchesText = dmp.patch_toText(patches);
                $.ajax($this.data('validate'), {
                    url: $this.data('validate'),
                    timeout: 15000,
                    data: {
                        frame_id: $this.data('frame-id'),
                        comment_id: $this.data('comment-id'),
                        summary_id: $this.data('summary-id'),
                        field: $this.data('field'),
                        message: $('#description1').val(),
                        length: countCharacters($('#description').val()),
                        counter: patches.length,
                        content: patchesText
                    },
                    method: 'POST',
                    success: function(data) {
                        $('.loader-like').remove();
                        $('#timeout-errors').hide();
                        $this.show();
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        $('.loader-like').remove();
                        $('#timeout-errors').show();
                        $this.show();
                    }
                });
            });
            return true
        };

        $.fn.prettyTextDiff.createHTML = function (diff) {
            var data, html, operation, pattern_amp, pattern_gt, pattern_lt, pattern_para, text;
            html = [];
            pattern_amp = /&/g;
            pattern_lt = /</g;
            pattern_gt = />/g;
            pattern_para = /\n/g;
            operation = diff[0], data = diff[1];
            if (data != '') {
                text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;').replace(pattern_gt, '&gt;').replace(pattern_para, '<br>');
                switch (operation) {
                    case DIFF_INSERT:
                        return '<ins>' + text + '</ins>';
                    case DIFF_DELETE:
                        return '<del>' + text + '</del>';
                    case DIFF_EQUAL:
                        return '<span>' + text + '</span>';
                }
            }
        };

    }).call(this);
    $(document).ready(function () {
        dmp = new diff_match_patch();
        $('#description').val(dmp.patch_apply(dmp.patch_fromText($('#patches').text()), $("#original").text())[0]);
        setupLengthCounter([['', <%= @patch.content_ch_max %>, <%= @patch.content_ch_min %>], ['1', 2500, 0]])
    });
    $("#edit-ok").on("click", function () {
        $("#patch-form").hide();
        $("#patch-validate").show();
        $('#description').prettyTextDiff();
    });
    $("#back-edit").on("click", function () {
        $("#error_explanation").remove();
        $("#patch-form").show();
        $("#patch-validate").hide();
    });
</script>
